name: Build and Deploy AquilaCMS to EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Set up Yarn
      uses: mskelton/setup-yarn@v1
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: yarn install

    - name: Build Docker image
      run: docker build -t aquilacms .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: |
        docker tag aquilacms:latest ${{ secrets.DOCKER_USERNAME }}/aquilacms:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/aquilacms:latest

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Set SSH Key
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/aquila-aws-key.pem
        chmod 600 ~/.ssh/aquila-aws-key.pem

    - name: Start SSH Agent
      run: |
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/aquila-aws-key.pem

    - name: Add Database Host to known_hosts
      run: ssh-keyscan -H ${{ secrets.AQUILA_DB_HOST }} >> ~/.ssh/known_hosts

    - name: Add App Host 1 to known_hosts
      run: ssh-keyscan -H ${{ secrets.AQUILA_APP_HOST_1 }} >> ~/.ssh/known_hosts

    - name: Add App Host 2 to known_hosts
      run: ssh-keyscan -H ${{ secrets.AQUILA_APP_HOST_2 }} >> ~/.ssh/known_hosts

    - name: Debug SSH Configuration
      run: |
        echo "Contents of known_hosts:"
        cat ~/.ssh/known_hosts

    - name: Deploy Dockerize Database for APP instance
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.AQUILA_DB_HOST }} << 'EOF'
          # Pull the latest Docker image
          docker pull mongo

          # Run the Docker container
          docker run -d --name aquila_app -e MONGO_URL="mongodb://${{ secrets.AQUILA_DB_HOST }}:27017/test" -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/aquilacms:latest
        EOF

    - name: Deploy Dockerize application on APP 1 instance
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.AQUILA_APP_HOST_1 }} << 'EOF'
          # Pull the latest Docker image
          docker pull ${{ secrets.DOCKER_USERNAME }}/aquilacms:latest

          # Run the Docker container
          docker run -d --name aquila_app -e MONGO_URL="mongodb://${{ secrets.AQUILA_DB_HOST }}:27017/test" -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/aquilacms:latest
        EOF

    - name: Deploy Dockerize application on APP 2 instance
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.AQUILA_APP_HOST_2 }} << 'EOF'
          # Pull the latest Docker image
          docker pull ${{ secrets.DOCKER_USERNAME }}/aquilacms:latest

          # Run the Docker container
          docker run -d --name aquila_app -p 3010:3010 ${{ secrets.DOCKER_USERNAME }}/aquilacms:latest
        EOF
